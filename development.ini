#
# MediaCore - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# IMPORTANT NOTE!!  Do NOT use this config for any kind of production environ.
#                   Generate a new, production-safe config with this command:
#                     $ paster make-config mediacore production.ini
#
[DEFAULT]
# WARNING == If debug is not set to false, you'll get the interactive
# debugger on production, which is a huge security hole. 
debug = true

# Dont send error notifications by email when developing. That'd be annoying.
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 8080

[app:main]
use = egg:MediaCore
full_stack = true
app_instance_uuid = {2673572c-6fb8-405e-89ed-00e2d4192faa}
beaker.session.key = mediacore

beaker.session.secret = superdupersecret
sa_auth.cookie_secret = superdupersecret

# Specify the database for SQLAlchemy to use
sqlalchemy.url = mysql://username:pass@localhost/dbname?charset=utf8&use_unicode=0
sqlalchemy.echo = False
sqlalchemy.pool_recycle = 3600

# Host the app with mod_fastcgi?
fastcgi = false
# There is no need to change the paths if you are using the default .htaccess
# Both paths are relative to the location of the .htaccess file.
# fastcgi_real_path    - the path to your fastcgi script
# fastcgi_rewrite_path - the path that your rewrite rules use to direct
#                        requests to the fastcgi script.
fastcgi_real_path = /mediacore.fcgi
fastcgi_rewrite_path = /

# Data paths
cache_dir = %(here)s/data
image_dir = %(here)s/mediacore/public/images
media_dir = %(here)s/data/media

# Enable akismet anti-spam protection by setting your API key here
# The akismet_url is the 'blog url' you signed up with. Defaults to the app root
# For more information see http://akismet.com/
akismet_key =
akismet_url =

# Require a moderator's approval before publishing new comments on the site
# If akismet is enabled, it filters out spam regardless of this setting
req_comment_approval = false

# Max size in bytes for new uploads (300 MB by default)
max_upload_size = 314572800

# If you want to use a CDN instead of storing media locally,
# specify the FTP login info here:
ftp_storage = false
ftp_server = ftp.someserver.com
ftp_user = username
ftp_password = password
ftp_upload_directory = media
ftp_download_url = http://www.someserver.com/web/accessible/media/
ftp_upload_integrity_retries = 10

# Specify the layout template name to wrap core mediacore output in
layout_template = layout

# Defines an external genshi template to wrap the output (including layout) in
external_template = false
external_template_name = external
external_template_url = http://some/valid_genshi_template.html
external_template_timeout = 600

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false


# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, mediacore, sqlalchemy, auth, tgi18n

[handlers]
keys = console

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_mediacore]
level = INFO
handlers =
qualname = mediacore

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)


# A logger for authentication, identification and authorization -- this is
# repoze.who and repoze.what:
[logger_auth]
level = WARN
handlers = 
qualname = auth

[logger_tgi18n]
level = WARN
handlers =
qualname = tg.i18n

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
